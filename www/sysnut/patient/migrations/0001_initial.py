# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-02-10 02:31
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade')),
                ('state', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MG', 'Minas Gerais'), ('MS', 'Mato Grosso do Sul'), ('MT', 'Mato Grosso'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PE', 'Pernanbuco'), ('PI', 'Piauí'), ('PR', 'Paraná'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SE', 'Sergipe'), ('SP', 'São Paulo'), ('TO', 'Tocantins')], default='PI', max_length=2, verbose_name='UF')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Rua')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('reference_point', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ponto de Referência')),
                ('neighborhood', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('country', models.CharField(default='Brasil', max_length=255, verbose_name='País')),
            ],
        ),
        migrations.CreateModel(
            name='Biochemical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descricao')),
            ],
        ),
        migrations.CreateModel(
            name='BiochemicalExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condiction', models.CharField(choices=[('Alto', 'Alto'), ('Normal', 'Normal'), ('Baixo', 'Baixo')], default=None, max_length=10, verbose_name='Condição')),
            ],
        ),
        migrations.CreateModel(
            name='Bioimpedance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fat_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Percentual de Gordura')),
                ('bone_weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Peso ósseo (kg)')),
                ('metabolic_age', models.IntegerField(default=0, verbose_name='Idade metabólica (anos)')),
                ('lean_mass', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Massa magra (kg)')),
                ('fat_free_mass', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Massa livre de gordura (kg)')),
                ('total_body_water', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Água corporal total (kg)')),
                ('visceral_fat', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Gordura visceral (grau)')),
            ],
        ),
        migrations.CreateModel(
            name='BodyCircunference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thorax_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. do Tórax (cm)')),
                ('shoulder_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. do Ombro (cm)')),
                ('relaxed_arm_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Braço Relaxado (cm)')),
                ('contracted_arm_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Braço Contraído (cm)')),
                ('forearm_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. do Antebraço (cm)')),
                ('waist_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Cintura (cm)')),
                ('abdomen_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. do Abdomen (cm)')),
                ('hip_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Quadril (cm)')),
                ('proximal_thigh_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Coxa Proximal (cm)')),
                ('medial_thigh_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Coxa Medial (cm)')),
                ('distal_thigh_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Coxa Distal (cm)')),
                ('calf_circ', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Circ. Panturrilha (cm)')),
            ],
        ),
        migrations.CreateModel(
            name='BoneDiameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('humeros_diameter', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Diâmetro do úmero (cm)')),
                ('wrist_diameter', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Diâmetro do pulso (cm)')),
                ('femoral_diameter', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Diâmetro do fêmur (cm)')),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Peso (kg)')),
                ('height', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Altura (Metros)')),
                ('objective', models.CharField(max_length=255, verbose_name='Objetivo')),
                ('date', models.DateField(verbose_name='Data da consulta')),
                ('nutrients', models.CharField(choices=[('OMS2008', 'OMS 2008'), ('DRI2002', 'DRI 2002/2005')], default='OMS2008', max_length=30, verbose_name='Adequação de Nutrientes')),
                ('family_history', models.CharField(blank=True, max_length=255, verbose_name='Histórico Familiar')),
                ('drugs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fármacos')),
                ('life_style', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estilo de vida')),
                ('feed_preferences', models.CharField(blank=True, max_length=255, null=True, verbose_name='Preferências Alimentares')),
                ('prognostic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Prognóstico')),
                ('evaluation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Avaliação')),
                ('observation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observações gerais')),
                ('bioimpedance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_bioimpedance', to='patient.Bioimpedance', verbose_name='Bioimpedância')),
                ('bodycirc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_bodycirc', to='patient.BodyCircunference', verbose_name='Circunferência Corporal')),
                ('bonediameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_bone_diameter', to='patient.BoneDiameter', verbose_name='Diâmetro ósseo')),
            ],
            options={
                'verbose_name': 'Consulta',
                'ordering': ['-patient'],
                'verbose_name_plural': 'Consultas',
            },
        ),
        migrations.CreateModel(
            name='EnergyCalc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calc_title', models.CharField(blank=True, default='Calculo padrão', max_length=255, null=True, verbose_name='Título do Cálculo')),
                ('knee_height', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Altura do Joelho (cm)')),
                ('mbr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Taxa Metabólica Basal')),
                ('tee', models.CharField(blank=True, max_length=255, null=True, verbose_name='Gasto Energético Total')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição')),
                ('path', models.FileField(blank=True, null=True, upload_to='upload/exam', verbose_name='Exame')),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_consultation', to='patient.Consultation', verbose_name='Exame')),
            ],
        ),
        migrations.CreateModel(
            name='FoodAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now_add=True, verbose_name='Atualizado em')),
                ('published', models.BooleanField(verbose_name='Publicar?')),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_consultation', to='patient.Consultation', verbose_name='Consulta')),
            ],
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='FormulaValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Fator de Atividade')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Valor')),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_formula', to='patient.Formula', verbose_name='Formula')),
            ],
        ),
        migrations.CreateModel(
            name='Guidance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, verbose_name='Descrição')),
                ('message', models.TextField(max_length=200, verbose_name='Mensagem')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
                ('sex', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], default='M', max_length=1, verbose_name='Sexo')),
                ('marital_status', models.CharField(choices=[('CASADO', 'Casado'), ('SOLTEIRO', 'Solteiro'), ('SEPARADO', 'Seprado'), ('VIUVO', 'Viuvo'), ('DIVORCIADO', 'Divorciado')], default='SOLTEIRO', max_length=10, null=True, verbose_name='Estado Cívil')),
                ('birth_date', models.DateField(verbose_name='Data de Nascimento')),
                ('phone', models.CharField(max_length=16, verbose_name='Telefone')),
                ('ocupation', models.CharField(max_length=16, verbose_name='Ocupação')),
                ('observation', models.CharField(max_length=200, verbose_name='Observação sobre o paciente')),
                ('ethnicity', models.CharField(choices=[('BRANCO', 'Branco'), ('NEGRO', 'Negro'), ('INDÍGENA', 'Indígena'), ('PARDO', 'Pardo'), ('MULATO', 'Mulato'), ('OUTRO', 'Outro')], default=None, max_length=10, verbose_name='Etnia')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now_add=True, verbose_name='Atualizado em')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_address', to='patient.Address', verbose_name='Endereço')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_users', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Paciente',
                'ordering': ['-created_at'],
                'verbose_name_plural': 'Pacientes',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='SkinFold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tricipital_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra tricipital (mm)')),
                ('subscapular_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra subescapular (mm)')),
                ('chest_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra torácica (mm)')),
                ('bicipital_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra bicipital (mm)')),
                ('mean_axillary_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra axilar média (mm)')),
                ('suprailiathic_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra suprailíaca (mm)')),
                ('abdominal_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra abdominal (mm)')),
                ('thigh_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra da coxa (mm)')),
                ('calf_fold', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Dobra da panturrilha (mm)')),
            ],
        ),
        migrations.CreateModel(
            name='UploadGuidance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição da Tabela')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('path', models.FileField(blank=True, null=True, upload_to='upload/table', verbose_name='Tabela')),
            ],
        ),
        migrations.CreateModel(
            name='Vitamin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição')),
            ],
        ),
        migrations.AddField(
            model_name='guidance',
            name='nut',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guidance_nut', to=settings.AUTH_USER_MODEL, verbose_name='Nutricionista'),
        ),
        migrations.AddField(
            model_name='foodanalysis',
            name='guidance',
            field=models.ManyToManyField(blank=True, related_name='analysis_guidance', to='patient.Guidance', verbose_name='Orientação'),
        ),
        migrations.AddField(
            model_name='energycalc',
            name='activity_factor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.FormulaValue', verbose_name='Fator de Atividade'),
        ),
        migrations.AddField(
            model_name='energycalc',
            name='formula',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.Formula', verbose_name='Formula'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='energycalc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultation_energcalc', to='patient.EnergyCalc', verbose_name='Calculos Energéticos'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_consultation', to='patient.Patient', verbose_name='Paciente'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='patology',
            field=models.ManyToManyField(blank=True, related_name='consultation_patology', to='patient.Patology', verbose_name='Patologia'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='skinfold',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_skinfold', to='patient.SkinFold', verbose_name='Dobras Corporais'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='vitamin',
            field=models.ManyToManyField(blank=True, related_name='consultation_vitamin', to='patient.Vitamin', verbose_name='Deficiência Vitamínica'),
        ),
        migrations.AddField(
            model_name='biochemicalexam',
            name='consultation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultation_biochemical', to='patient.Consultation', verbose_name='Exame Bioquímico'),
        ),
        migrations.AddField(
            model_name='biochemicalexam',
            name='exam',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='value_biochemical', to='patient.Biochemical', verbose_name='Descrição'),
        ),
    ]
